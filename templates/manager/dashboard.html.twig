{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
    #chartdiv {
      width: 100%;
      height: 500px;
    }
    </style>
    {{ parent() }}
{% endblock %}

{% block title %}Dashboard Manager{% endblock %}

{% block body %}
<div class="logout-button">
    <a href="{{ path('app_logout') }}" class="btn btn-danger">Logout</a>
</div>
<div class="dashboard-header">
    <h1 class="dashboard-title">Dashboard Manager</h1>
</div>

<div class="dashboard-grafica">
    <div id="chartdiv"></div>
    <p class="dashboard-description">Cantidad de productos por cada talla</p>
</div>

<div class="dashboard-grafica2">
    <div id="second-chartdiv"></div>
    <p class="dashboard-description2">Cantidad de productos por pedido</p>
</div>


{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    am5.ready(function() {
        // Create root element for the first chart
        var root = am5.Root.new("chartdiv");

        // Set themes
        root.setThemes([
            am5themes_Animated.new(root)
        ]);

        // Create first chart
        var chart = root.container.children.push(am5xy.XYChart.new(root, {
            panX: true,
            panY: true,
            wheelX: "panX",
            wheelY: "zoomX",
            pinchZoomX: true
        }));

        // Add cursor
        var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
        cursor.lineY.set("visible", false);

        // Create axes
        var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
            categoryField: "category",
            renderer: am5xy.AxisRendererX.new(root, {}),
            tooltip: am5.Tooltip.new(root, {})
        }));

        var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
            renderer: am5xy.AxisRendererY.new(root, {})
        }));

        // Create series
        var series = chart.series.push(am5xy.ColumnSeries.new(root, {
            name: "Series 1",
            xAxis: xAxis,
            yAxis: yAxis,
            valueYField: "quantity",
            categoryXField: "category",
            tooltip: am5.Tooltip.new(root, {
                labelText: "{valueY}"
            })
        }));

        series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });

        // Set data for the first chart
        var data = {{ dataForChart | raw }};
        console.log(data); // Agregar un console.log para depuración
        xAxis.data.setAll(data);
        series.data.setAll(data);

        // Make stuff animate on load
        series.appear(1000);
        chart.appear(1000, 100);

        // Create root element for the second chart
        var root2 = am5.Root.new("second-chartdiv");

        // Set themes for the second chart
        root2.setThemes([
            am5themes_Animated.new(root2)
        ]);

        // Create second chart
        var chart2 = root2.container.children.push(am5xy.XYChart.new(root2, {
            panX: true,
            panY: true,
            wheelX: "panX",
            wheelY: "zoomX",
            pinchZoomX: true
        }));

        // Add cursor for the second chart
        var cursor2 = chart2.set("cursor", am5xy.XYCursor.new(root2, {}));
        cursor2.lineY.set("visible", false);

        // Create axes for the second chart
        var xAxis2 = chart2.xAxes.push(am5xy.CategoryAxis.new(root2, {
            categoryField: "category",
            renderer: am5xy.AxisRendererX.new(root2, {}),
            tooltip: am5.Tooltip.new(root2, {})
        }));

        var yAxis2 = chart2.yAxes.push(am5xy.ValueAxis.new(root2, {
            renderer: am5xy.AxisRendererY.new(root2, {})
        }));

        // Create series for the second chart
        var series2 = chart2.series.push(am5xy.ColumnSeries.new(root2, {
            name: "Series 1",
            xAxis: xAxis2,
            yAxis: yAxis2,
            valueYField: "quantity",
            categoryXField: "category",
            tooltip: am5.Tooltip.new(root2, {
                labelText: "{valueY}"
            })
        }));

        series2.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });

        // Set data for the second chart
        var data2 = {{ dataForSecondChart | raw }};
        console.log(data2); // Agregar un console.log para depuración
        xAxis2.data.setAll(data2);
        series2.data.setAll(data2);

        // Make stuff animate on load for the second chart
        series2.appear(1000);
        chart2.appear(1000, 100);
    });
</script>

{% endblock %}
